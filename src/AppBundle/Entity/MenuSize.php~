<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * MenuSize
 *
 * @ORM\Table(name="menu_size")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\MenuSizeRepository")
 */
class MenuSize
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=255)
     */
    private $name;

    /**
     * @var string
     *
     * @ORM\Column(name="description", type="text")
     */
    private $description;

    /**
     * @var string
     *
     * @ORM\ManyToOne(targetEntity="Menu", inversedBy="menuSizes")
     */
    private $menu;

    /**
     * @var MenuOption[]
     *
     * @ORM\OneToMany(targetEntity="MenuOption", mappedBy="menu")
     */
    private $menuOptionsList;


    /**
     * Get id
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     *
     * @return MenuSize
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get name
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set description
     *
     * @param string $description
     *
     * @return MenuSize
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set menu
     *
     * @param \AppBundle\Entity\Menu $menu
     *
     * @return MenuSize
     */
    public function setMenu(\AppBundle\Entity\Menu $menu = null)
    {
        $this->menu = $menu;

        return $this;
    }

    /**
     * Get menu
     *
     * @return \AppBundle\Entity\Menu
     */
    public function getMenu()
    {
        return $this->menu;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->productsList = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add productsList
     *
     * @param \AppBundle\Entity\MenuOptionProduct $productsList
     *
     * @return MenuSize
     */
    public function addProductsList(\AppBundle\Entity\MenuOptionProduct $productsList)
    {
        $this->productsList[] = $productsList;

        return $this;
    }

    /**
     * Remove productsList
     *
     * @param \AppBundle\Entity\MenuOptionProduct $productsList
     */
    public function removeProductsList(\AppBundle\Entity\MenuOptionProduct $productsList)
    {
        $this->productsList->removeElement($productsList);
    }

    /**
     * Get productsList
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getProductsList()
    {
        return $this->productsList;
    }

    private function triOption($a, $b){
        return strcmp($a->post_name, $b->post_name);
    }

    /**
     * @return mixed
     */
    public function getMenuOptions()
    {
        /*$options = [];
        foreach ($this->getProductsList() as $k => $menuOptionProd){
            if ($k > 0) {
                if ($menuOptionProd != $this->getProductsList()[$k - 1]) {
                    $options[] = $menuOptionProd->getMenuOption();
                }
            }else{
                $options[] = $menuOptionProd->getMenuOption();
            }
        }
        foreach ($options as $option) {
            foreach ($this->getProductsList() as $menuProd) {
                if ($menuProd->getMenuOption == $option){
                    $option[]
                }
            }
        }*/
    }

}
